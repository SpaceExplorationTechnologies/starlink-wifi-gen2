	config NUT_SERVER
		depends on PACKAGE_nut
		bool "Include server components (upsd)"
		help
			upsd is responsible for serving the data from the drivers to the
			clients. It connects to each driver and maintains a local cache of the
			current state. Queries from the clients are served from this cache, so
			delays are minimal. This program is essential, and must be running at
			all times to actually make any use out of the drivers and clients.
		default y
		
	config NUT_CLIENTS_UPSC
		depends on PACKAGE_nut
		bool "Include command line client (upsc)"
		help
			upsc is provided as a quick way to poll the status of a UPS server. It
			can be used inside shell scripts and other programs that need UPS data
			but don't want to include the full interface.
		default y
		
	config NUT_CLIENTS_UPSLOG
		depends on PACKAGE_nut
		bool "Include logging client (upslog)"
		help
			upslog is a daemon that will poll a UPS at periodic intervals, fetch the
			variables that interest you, format them, and write them to a file.
		default n
		
	config NUT_CLIENTS_UPSCMD
		depends on PACKAGE_nut
		bool "Include UPS controller (upscmd)"
		help
			upscmd allows you to invoke "instant commands" in your UPS hardware. Not
			all hardware supports this, so check the list with -l to see if anything
			will work on your equipment. On hardware that supports it, you can use
			this program to start and stop battery tests, invoke a front panel test
			(beep!), turn the load on or off, and more.
		default n
		
	config NUT_CLIENTS_UPSRW
		depends on PACKAGE_nut
		bool "Include UPS variable editor (upsrw)"
		help
			upsrw allows you to view and change the read/write variables inside your
			UPS. It sends commands via the upsd to your driver, which configures the
			hardware for you. The list of variables that allow you to change their
			values is based on the capabilities of your UPS equipment. Not all
			models support this feature. Typically, cheaper hardware does not
			support any of them.
		default n
		
	config NUT_CLIENTS_UPSMON
		depends on PACKAGE_nut
		bool "Include monitor and shutdown controller (upsmon)"
		help
			upsmon is the client process that is responsible for the most important
			part of UPS monitoring--shutting down the system when the power goes
			out. It can call out to other helper programs for notification purposes
			during power events. upsmon can monitor multiple systems using a single
			process. Every UPS that is defined in the upsmon.conf configuration file
			is assigned a power value and a type (slave or master).
		default y
		
	config NUT_CLIENTS_UPSSCHED
		depends on NUT_CLIENTS_UPSMON
		bool "Include helper for triggering events from upsmon (upssched)"
		help
			upssched was created to allow users to execute programs at times relative
			to events being monitored by upsmon. The original purpose was to allow
			for a shutdown to occur after some fixed period on battery, but there are
			other uses that are possible.
			You can alternatively write your own script and save some space.
		default n
	
	config NUT_SSL
		depends on PACKAGE_nut
		bool "Build with support for OpenSSL"
		help
			SSL allows sessions between upsd and clients to be encrypted and can
			also be used to authenticate servers. This means that stealing port
			3493 from upsd will no longer net you interesting passwords. SSL is
			available via OpenSSL on OpenWRT (NSS doesn't seem to work). If you
			are happy with using passwords to authenticate clients, you can save
			some space and build NUT without SSL support.
		default n
	
	config NUT_DRIVER_USB
		depends on PACKAGE_nut
		bool "Build with support for USB drivers"
		help
			If you have a UPS connected via USB, select this.
		default y
	
	config NUT_DRIVER_SNMP
		depends on PACKAGE_nut
		bool "Build with support for SNMP drivers"
		help
			If you have a UPS you can connect to via SNMP, select this.
		default n
		
