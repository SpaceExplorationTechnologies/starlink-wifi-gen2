--- a/configure.ac
+++ b/configure.ac
@@ -154,24 +154,8 @@ AS_IF([test "x$want_crypto" = "xauto" -o
 AS_IF([test "x$want_crypto" = "xauto" -o "x$want_crypto" = "xpolarssl"], [
     PKG_CHECK_MODULES(MBEDTLS, [mbedtls >= $POLARSSL_MINIMUM],
         [want_crypto="polarssl"; CRYPTO_PKG="polarssl"; CRYPTO_CFLAGS="$MBEDTLS_CFLAGS"; CRYPTO_LIBS="$MBEDTLS_LIBS"; POLARSSL_IS_MBEDTLS=yes],
-        [AC_CHECK_HEADER([polarssl/version.h],
-            [AC_EGREP_CPP([version_ok], [#include <polarssl/version.h>
-                                         #if defined (POLARSSL_VERSION_NUMBER) && POLARSSL_VERSION_NUMBER >= $POLARSSL_MINIMUM
-                                         version_ok
-                                         #endif],
-                [AC_CHECK_LIB([polarssl], [dhm_calc_secret],
-                    [want_crypto="polarssl"; CRYPTO_PKG="polarssl"; CRYPTO_CFLAGS=""; CRYPTO_LIBS="-lpolarssl"],
-                    [AS_IF([test "x$want_crypto" = "xpolarssl"],
-                        [AC_MSG_ERROR([PolarSSL support requested, but library not found.])]
-                    )]
-                )],
-                [AS_IF([test "x$want_crypto" = "xpolarssl"],
-                    [AC_MSG_ERROR([PolarSSL support requested, but version not suitable.])]
-                )]
-            )],
-            [AS_IF([test "x$want_crypto" = "xpolarssl"],
-                [AC_MSG_ERROR([PolarSSL support requested, but headers not found.])]
-            )]
+        [AS_IF([test "x$want_crypto" = "xpolarssl"],
+            [AC_MSG_ERROR([PolarSSL support requested, but library not found.])]
         )]
     )
 ])
