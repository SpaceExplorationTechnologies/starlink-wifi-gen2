<%+header%>
<%
local uci = require "luci.model.uci".cursor()
local contact = uci:get_all("freifunk", "contact")
local contacturl = luci.dispatcher.build_url(luci.dispatcher.context.path[1], "freifunk", "contact")
local hostname = uci:get_first ("system", "system", "hostname")
local latitude = uci:get_first ("system", "system", "latitude")
local longitude = uci:get_first ("system", "system", "longitude")
local location = uci:get_first ("system", "system", "location")
local basicsurl = luci.dispatcher.build_url(luci.dispatcher.context.path[1], "freifunk", "basics")
local nickname, name, mail
if not contact then
	nickname, name, mail = ""
else
	nickname = contact.nickname
	name = contact.name
	mail = contact.mail
end

%>

<h2><%:Freifunk Overview%></h2>

<%:These pages will assist you in setting up your router for Freifunk or similar wireless community networks.%>
<p />

<% if not (hostname and latitude and longitude and location) then%>
<div class="error">
	<%:Basic settings are incomplete. Please go to%> <a href='<%=basicsurl%>'><%:Basic settings%></a> <%:and fill out all required fields.%>
</div>
<%end%>
<p />

<% if not (nickname and name and mail) then%>
<div class="error">
	<%:Contact information is incomplete. Please go to%> <a href='<%=contacturl%>'><%:Contact%></a> <%:and fill out all required fields.%>
	<p />
</div>
<%end%>

<% uci:foreach("wireless", "wifi-device", function(section)
	local device = section[".name"]
	local url = luci.dispatcher.build_url(luci.dispatcher.context.path[1], "network", "wireless")
	if section.diversity ~= "0" and section.disabled ~= "1" and section.type ~= "mac80211" then
		print('<div class="error">' .. translate("Diversity is enabled for device") .. ' <b>' .. section[".name"] .. '</b>. '
		.. translate("Go to") .. ' <a href="' .. url .. '">' .. translate("wireless settings") .. '</a> ' ..
		translate("to disable it.") .. '</div><p />')
	end
end) %>

<%+footer%>
