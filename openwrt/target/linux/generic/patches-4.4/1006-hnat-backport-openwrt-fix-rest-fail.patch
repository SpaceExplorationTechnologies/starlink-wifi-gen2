diff -urN a/net/netfilter/nf_conntrack_proto_tcp.c b/net/netfilter/nf_conntrack_proto_tcp.c
--- a/net/netfilter/nf_conntrack_proto_tcp.c	2018-03-26 16:29:03.142604137 +0800
+++ b/net/netfilter/nf_conntrack_proto_tcp.c	2018-03-26 16:29:19.144440298 +0800
@@ -11,6 +11,7 @@
 #include <linux/types.h>
 #include <linux/timer.h>
 #include <linux/module.h>
+#include <linux/inetdevice.h>
 #include <linux/in.h>
 #include <linux/tcp.h>
 #include <linux/spinlock.h>
@@ -19,6 +20,7 @@
 #include <net/ip6_checksum.h>
 #include <asm/unaligned.h>
 
+#include <net/ip.h>
 #include <net/tcp.h>
 
 #include <linux/netfilter.h>
@@ -53,6 +55,11 @@
   /* FIXME: Examine ipfilter's timeouts and conntrack transitions more
      closely.  They're more complex. --RR */
 
+#ifndef IPV4_DEVCONF_DFLT
+	#define IPV4_DEVCONF_DFLT(net, attr) \
+	IPV4_DEVCONF((*net->ipv4.devconf_dflt), attr)
+#endif
+
 static const char *const tcp_conntrack_names[] = {
 	"NONE",
 	"SYN_SENT",
@@ -521,6 +528,18 @@
 	if (nf_ct_tcp_no_window_check)
 		return true;
 
+       if (net) {
+               if ((net->ipv4.devconf_all && net->ipv4.devconf_dflt && net->ipv6.devconf_all) &&
+                   net->ipv6.devconf_dflt) {
+                       if ((IPV4_DEVCONF_DFLT(net, FORWARDING) ||
+                            IPV4_DEVCONF_ALL(net, FORWARDING)) ||
+                            (net->ipv6.devconf_all->forwarding ||
+                             net->ipv6.devconf_dflt->forwarding)) {
+                               return true;
+                       }
+               }
+       }
+
 	/*
 	 * Get the required data from the packet.
 	 */
